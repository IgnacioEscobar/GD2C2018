<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zniODXYAAAAASUVORK5CYII=
</value>
  </data>
</root>